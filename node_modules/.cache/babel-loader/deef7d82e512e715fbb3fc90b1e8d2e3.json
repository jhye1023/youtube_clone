{"ast":null,"code":"var _jsxFileName = \"/Users/jihyechoi/Portfolios/youtube_clone/template/src/app.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styles from './app.module.css';\nimport VideoList from './components/video_list/video_list';\nimport SearchHeader from './components/search_header/search_header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [videos, setVideos] = useState([]);\n\n  const search = query => {\n    const requestOptions = {\n      method: 'GET',\n      redirect: 'follow'\n    };\n    fetch(`https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=25&q=${query}&type=video&key=AIzaSyAxA5abUv9foNe9dJx43tgjR45xelqFmZo`, requestOptions).then(response => response.json()).then(result => result.items.map(item => ({ ...item,\n      id: item.id.videoId\n    }))).then(item => setVideos(items)).catch(error => console.log('error', error));\n  };\n\n  useEffect(() => {\n    const requestOptions = {\n      method: 'GET',\n      redirect: 'follow'\n    };\n    fetch(\"https://youtube.googleapis.com/youtube/v3/videos?part=snippet&chart=mostPopular&maxResults=25&key=AIzaSyAxA5abUv9foNe9dJx43tgjR45xelqFmZo\", requestOptions).then(response => response.json()).then(result => setVideos(result.items)).catch(error => console.log('error', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.app,\n    children: [/*#__PURE__*/_jsxDEV(SearchHeader, {\n      onSearch: search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(VideoList, {\n      videos: videos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 2\n  }, this);\n}\n\n_s(App, \"39g9r2hk3cJXA16k+db4Z3Rqykw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jihyechoi/Portfolios/youtube_clone/template/src/app.jsx"],"names":["React","useEffect","useState","styles","VideoList","SearchHeader","App","videos","setVideos","search","query","requestOptions","method","redirect","fetch","then","response","json","result","items","map","item","id","videoId","catch","error","console","log","app"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;;AACA,QAAMO,MAAM,GAAGC,KAAK,IAAI;AACtB,UAAMC,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,KADa;AAErBC,MAAAA,QAAQ,EAAE;AAFW,KAAvB;AAKAC,IAAAA,KAAK,CAAE,iFAAgFJ,KAAM,yDAAxF,EAAkJC,cAAlJ,CAAL,CACGI,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,MAAM,IAAIA,MAAM,CAACC,KAAP,CAAaC,GAAb,CAAiBC,IAAI,KAAK,EAAC,GAAGA,IAAJ;AAAUC,MAAAA,EAAE,EAAED,IAAI,CAACC,EAAL,CAAQC;AAAtB,KAAL,CAArB,CAFlB,EAGGR,IAHH,CAGQM,IAAI,IAAIb,SAAS,CAACW,KAAD,CAHzB,EAIGK,KAJH,CAISC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB,CAJlB;AAKD,GAXD;;AAYAxB,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMU,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,KADa;AAErBC,MAAAA,QAAQ,EAAE;AAFW,KAAvB;AAKAC,IAAAA,KAAK,CAAC,2IAAD,EAA8IH,cAA9I,CAAL,CACGI,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,MAAM,IAAIV,SAAS,CAACU,MAAM,CAACC,KAAR,CAF3B,EAGGK,KAHH,CAGSC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB,CAHlB;AAKD,GAXQ,EAWP,EAXO,CAAT;AAYD,sBACA;AAAK,IAAA,SAAS,EAAEtB,MAAM,CAACyB,GAAvB;AAAA,4BACA,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAEnB;AAAxB;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,SAAD;AAAW,MAAA,MAAM,EAAIF;AAArB;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAOA;;GAjCQD,G;;KAAAA,G;AAmCT,eAAeA,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport styles from './app.module.css';\nimport VideoList from './components/video_list/video_list';\nimport SearchHeader from './components/search_header/search_header';\n\n\n\nfunction App() {\n  const [videos, setVideos] = useState([]);\n  const search = query => {\n    const requestOptions = {\n      method: 'GET',\n      redirect: 'follow'\n    };\n    \n    fetch(`https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=25&q=${query}&type=video&key=AIzaSyAxA5abUv9foNe9dJx43tgjR45xelqFmZo`, requestOptions)\n      .then(response => response.json())\n      .then(result => result.items.map(item => ({...item, id: item.id.videoId})))\n      .then(item => setVideos(items))\n      .catch(error => console.log('error', error));\n  }\n  useEffect(()=>{\n    const requestOptions = {\n      method: 'GET',\n      redirect: 'follow'\n    };\n    \n    fetch(\"https://youtube.googleapis.com/youtube/v3/videos?part=snippet&chart=mostPopular&maxResults=25&key=AIzaSyAxA5abUv9foNe9dJx43tgjR45xelqFmZo\", requestOptions)\n      .then(response => response.json())\n      .then(result => setVideos(result.items))\n      .catch(error => console.log('error', error));\n\n  },[]);\n return (\n <div className={styles.app}>\n <SearchHeader onSearch={search}/>\n <VideoList videos = {videos}/>\n </div>\n )\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}